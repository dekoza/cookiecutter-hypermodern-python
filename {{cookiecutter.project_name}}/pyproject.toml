[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}/releases"

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.7"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.8"
pre-commit = "^3.8.0"
pre-commit-hooks = "^4.6.0"
bandit = "^1.7.10"
mypy = "^1.11.2"
darglint = "^1.8.1"
safety = "^3.2.8"
typeguard = "^4.3.0"
ipython = "^8.27.0"


[tool.poetry.group.tests.dependencies]
pytest = "^8.3.3"
coverage = {version = "^7.6.1", extras = ["toml"]}
xdoctest = {version = "^1.2.0", extras = ["colors"]}


[tool.poetry.group.docs.dependencies]
sphinx = "^8.0.2"
furo = "^2024.8.6"
sphinx-autobuild = "^2024.9.19"
sphinx-click = "^6.0.0"
myst-parser = "^4.0.0"
pygments = "^2.18.0"


[tool.poetry.scripts]
{{cookiecutter.project_name}} = "{{cookiecutter.package_name}}.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = ["B","B9", "C", "D", "E", "F", "UP", "I", "N", "W"]
ignore = ["E203", "E501"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.pydocstyle]
convention = "google"
max-line-length = 100

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
